import {Box, Container, Group, Loader, SimpleGrid, Text, TextInput, Title} from '@mantine/core';
import React, {useEffect, useState} from 'react';
import {Card} from '../components';
import Layout from '../layout';
import {IPost} from "../types";
import {IconSearch} from "@tabler/icons-react";

export const RenderCards = ({data, title}: { data?: IPost[], title: string }): any => {
  if (data?.length && data) {
    return <SimpleGrid cols={3} spacing="lg">
      {data.map((d) => <Card key={d._id} data={d}/>)}
    </SimpleGrid>
  }

  return <Title>{title}</Title>
}

const Home = () => {
  const [loading, setLoading] = useState(false);
  const [allPosts, setAllPosts] = useState<IPost[]>();
  const [searchText, setSearchText] = useState('');
  const [searchedResults, setSearchedResults] = useState<IPost[]>();
  const [searchTimeout, setSearchTimeout] = useState<any>(null);

  useEffect(() => {
    const fetchPosts = async () => {
      setLoading(true);

      try {
        const response = await fetch('http://localhost:8080/api/v1/post', {
          method: 'GET',
          headers: {
            'Content-Type': 'application/json'
          },
        });

        if (response.ok) {
          const result = await response.json();
          console.log(result.data.reverse());
          setAllPosts(result.data.reverse());
        }
      } catch (error) {
        console.log(error);
        alert(error);
      } finally {
        setLoading(false);
      }
    };

    fetchPosts();
  }, []);

  const handleSearchChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    clearTimeout(searchTimeout);
    setSearchText(e.target.value);

    setSearchTimeout(
      setTimeout(() => {
        const searchResults = allPosts?.filter((item) => item.name.toLowerCase().includes(searchText) || item.prompt.toLowerCase().includes(searchText))

        setSearchedResults(searchResults);
      }, 500)
    )
  }

  return (
    <Layout>
      <Container>
        <Title mb="sm">The community showcase</Title>
        <Text>Browse through a collection of imaginative and visually stunning images generated by DALL-E AI</Text>
        <TextInput
          type="text"
          placeholder="search items..."
          value={searchText}
          icon={<IconSearch/>}
          onChange={handleSearchChange}
          my="lg"/>
        {loading ? (
          <Loader/>
        ) : (
          <>
            {Boolean(searchText) && (
              <Group>
                <Title>showing results for: </Title>
                <Title>{searchText}</Title>
              </Group>
            )}
          </>
        )}
        <Box>
          {searchText
            ? <RenderCards data={searchedResults} title="No search results found"/>
            : <RenderCards data={allPosts} title="No posts found"/>}
        </Box>
      </Container>
    </Layout>
  );
};

export default Home;
